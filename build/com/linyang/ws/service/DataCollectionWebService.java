
package com.linyang.ws.service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import com.linyang.ws.wsimport.DataBean;
import com.linyang.ws.wsimport.MeasureDataResultBean;
import com.linyang.ws.wsimport.ObjectFactory;
import com.linyang.ws.wsimport.ResultBean;
import com.linyang.ws.wsimport.SendResultBean;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "DataCollectionWebService", targetNamespace = "http://wsimport.ws.linyang.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface DataCollectionWebService {


    /**
     * 
     * @param dataItems
     * @param pointId
     * @return
     *     returns com.linyang.ws.wsimport.ResultBean
     */
    @WebMethod
    @WebResult(name = "getDataServiceResult", targetNamespace = "")
    @RequestWrapper(localName = "getDataService", targetNamespace = "http://wsimport.ws.linyang.com/", className = "com.linyang.ws.wsimport.GetDataService")
    @ResponseWrapper(localName = "getDataServiceResponse", targetNamespace = "http://wsimport.ws.linyang.com/", className = "com.linyang.ws.wsimport.GetDataServiceResponse")
    public ResultBean getDataService(
        @WebParam(name = "pointId", targetNamespace = "")
        long pointId,
        @WebParam(name = "dataItems", targetNamespace = "")
        List<Long> dataItems);

    /**
     * 
     * @param dataItems
     * @param pointId
     * @return
     *     returns com.linyang.ws.wsimport.SendResultBean
     */
    @WebMethod
    @WebResult(name = "sendMeasureParams", targetNamespace = "")
    @RequestWrapper(localName = "sendMeasureParams", targetNamespace = "http://wsimport.ws.linyang.com/", className = "com.linyang.ws.wsimport.SendMeasureParams")
    @ResponseWrapper(localName = "sendMeasureParamsResponse", targetNamespace = "http://wsimport.ws.linyang.com/", className = "com.linyang.ws.wsimport.SendMeasureParamsResponse")
    public SendResultBean sendMeasureParams(
        @WebParam(name = "pointId", targetNamespace = "")
        long pointId,
        @WebParam(name = "dataItems", targetNamespace = "")
        List<Long> dataItems);

    /**
     * 
     * @param terminalId
     * @param dataItems
     * @return
     *     returns com.linyang.ws.wsimport.ResultBean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSwitchMeasureData", targetNamespace = "http://wsimport.ws.linyang.com/", className = "com.linyang.ws.wsimport.GetSwitchMeasureData")
    @ResponseWrapper(localName = "getSwitchMeasureDataResponse", targetNamespace = "http://wsimport.ws.linyang.com/", className = "com.linyang.ws.wsimport.GetSwitchMeasureDataResponse")
    public ResultBean getSwitchMeasureData(
        @WebParam(name = "terminalId", targetNamespace = "")
        long terminalId,
        @WebParam(name = "dataItems", targetNamespace = "")
        List<Long> dataItems);

    /**
     * 
     * @param terminalId
     * @param switchIntValue
     * @param isTurnOff
     * @return
     *     returns com.linyang.ws.wsimport.ResultBean
     */
    @WebMethod
    @WebResult(name = "getDataSwitchResult", targetNamespace = "")
    @RequestWrapper(localName = "getDataServiceSwitch", targetNamespace = "http://wsimport.ws.linyang.com/", className = "com.linyang.ws.wsimport.GetDataServiceSwitch")
    @ResponseWrapper(localName = "getDataServiceSwitchResponse", targetNamespace = "http://wsimport.ws.linyang.com/", className = "com.linyang.ws.wsimport.GetDataServiceSwitchResponse")
    public ResultBean getDataServiceSwitch(
        @WebParam(name = "terminalId", targetNamespace = "")
        long terminalId,
        @WebParam(name = "switchIntValue", targetNamespace = "")
        int switchIntValue,
        @WebParam(name = "isTurnOff", targetNamespace = "")
        boolean isTurnOff);

    /**
     * 
     * @param content
     * @param comControl
     * @param comPort
     * @param terminalId
     * @param byteTimeout
     * @param dataItems
     * @param msgTimeout
     * @return
     *     returns com.linyang.ws.wsimport.ResultBean
     */
    @WebMethod
    @WebResult(name = "sendTransData", targetNamespace = "")
    @RequestWrapper(localName = "sendTransData", targetNamespace = "http://wsimport.ws.linyang.com/", className = "com.linyang.ws.wsimport.SendTransData")
    @ResponseWrapper(localName = "sendTransDataResponse", targetNamespace = "http://wsimport.ws.linyang.com/", className = "com.linyang.ws.wsimport.SendTransDataResponse")
    public ResultBean sendTransData(
        @WebParam(name = "terminalId", targetNamespace = "")
        long terminalId,
        @WebParam(name = "dataItems", targetNamespace = "")
        List<Long> dataItems,
        @WebParam(name = "comPort", targetNamespace = "")
        long comPort,
        @WebParam(name = "comControl", targetNamespace = "")
        long comControl,
        @WebParam(name = "msgTimeout", targetNamespace = "")
        long msgTimeout,
        @WebParam(name = "byteTimeout", targetNamespace = "")
        long byteTimeout,
        @WebParam(name = "content", targetNamespace = "")
        String content);

    /**
     * 
     * @param startTime
     * @param dataType
     * @param pointId
     * @param endTime
     * @return
     *     returns java.util.List<com.linyang.ws.wsimport.DataBean>
     */
    @WebMethod
    @WebResult(name = "getHistoryDataFromDb", targetNamespace = "")
    @RequestWrapper(localName = "getHistoryDataFromDb", targetNamespace = "http://wsimport.ws.linyang.com/", className = "com.linyang.ws.wsimport.GetHistoryDataFromDb")
    @ResponseWrapper(localName = "getHistoryDataFromDbResponse", targetNamespace = "http://wsimport.ws.linyang.com/", className = "com.linyang.ws.wsimport.GetHistoryDataFromDbResponse")
    public List<DataBean> getHistoryDataFromDb(
        @WebParam(name = "pointId", targetNamespace = "")
        long pointId,
        @WebParam(name = "dataType", targetNamespace = "")
        Integer dataType,
        @WebParam(name = "startTime", targetNamespace = "")
        Long startTime,
        @WebParam(name = "endTime", targetNamespace = "")
        Long endTime);

    /**
     * 
     * @param startTime
     * @param dataItems
     * @param pointId
     * @return
     *     returns com.linyang.ws.wsimport.ResultBean
     */
    @WebMethod
    @WebResult(name = "getDataServiceWithTimeResult", targetNamespace = "")
    @RequestWrapper(localName = "getDataServiceWithTime", targetNamespace = "http://wsimport.ws.linyang.com/", className = "com.linyang.ws.wsimport.GetDataServiceWithTime")
    @ResponseWrapper(localName = "getDataServiceWithTimeResponse", targetNamespace = "http://wsimport.ws.linyang.com/", className = "com.linyang.ws.wsimport.GetDataServiceWithTimeResponse")
    public ResultBean getDataServiceWithTime(
        @WebParam(name = "pointId", targetNamespace = "")
        long pointId,
        @WebParam(name = "dataItems", targetNamespace = "")
        List<Long> dataItems,
        @WebParam(name = "startTime", targetNamespace = "")
        Long startTime);

    /**
     * 
     * @param dataItems
     * @param pointId
     * @param formatTime
     * @return
     *     returns com.linyang.ws.wsimport.ResultBean
     */
    @WebMethod
    @WebResult(name = "getDataServiceWithFormatTime2Second", targetNamespace = "")
    @RequestWrapper(localName = "getDataServiceWithFormatTime2Second", targetNamespace = "http://wsimport.ws.linyang.com/", className = "com.linyang.ws.wsimport.GetDataServiceWithFormatTime2Second")
    @ResponseWrapper(localName = "getDataServiceWithFormatTime2SecondResponse", targetNamespace = "http://wsimport.ws.linyang.com/", className = "com.linyang.ws.wsimport.GetDataServiceWithFormatTime2SecondResponse")
    public ResultBean getDataServiceWithFormatTime2Second(
        @WebParam(name = "pointId", targetNamespace = "")
        long pointId,
        @WebParam(name = "dataItems", targetNamespace = "")
        List<Long> dataItems,
        @WebParam(name = "formatTime", targetNamespace = "")
        String formatTime);

    /**
     * 
     * @param dataItems
     * @param pointId
     * @param formatTime
     * @return
     *     returns com.linyang.ws.wsimport.SendResultBean
     */
    @WebMethod
    @WebResult(name = "sendMeasureParamsWithFormatTime2Second", targetNamespace = "")
    @RequestWrapper(localName = "sendMeasureParamsWithFormatTime", targetNamespace = "http://wsimport.ws.linyang.com/", className = "com.linyang.ws.wsimport.SendMeasureParamsWithFormatTime")
    @ResponseWrapper(localName = "sendMeasureParamsWithFormatTimeResponse", targetNamespace = "http://wsimport.ws.linyang.com/", className = "com.linyang.ws.wsimport.SendMeasureParamsWithFormatTimeResponse")
    public SendResultBean sendMeasureParamsWithFormatTime(
        @WebParam(name = "pointId", targetNamespace = "")
        long pointId,
        @WebParam(name = "dataItems", targetNamespace = "")
        List<Long> dataItems,
        @WebParam(name = "formatTime", targetNamespace = "")
        String formatTime);

    /**
     * 
     * @param startTime
     * @param dataItems
     * @param pointId
     * @return
     *     returns com.linyang.ws.wsimport.SendResultBean
     */
    @WebMethod
    @WebResult(name = "sendMeasureParamsWithTime", targetNamespace = "")
    @RequestWrapper(localName = "sendMeasureParamsWithTime", targetNamespace = "http://wsimport.ws.linyang.com/", className = "com.linyang.ws.wsimport.SendMeasureParamsWithTime")
    @ResponseWrapper(localName = "sendMeasureParamsWithTimeResponse", targetNamespace = "http://wsimport.ws.linyang.com/", className = "com.linyang.ws.wsimport.SendMeasureParamsWithTimeResponse")
    public SendResultBean sendMeasureParamsWithTime(
        @WebParam(name = "pointId", targetNamespace = "")
        long pointId,
        @WebParam(name = "dataItems", targetNamespace = "")
        List<Long> dataItems,
        @WebParam(name = "startTime", targetNamespace = "")
        Long startTime);

    /**
     * 
     * @param frameId
     * @return
     *     returns com.linyang.ws.wsimport.MeasureDataResultBean
     */
    @WebMethod
    @WebResult(name = "getMeasureDatas", targetNamespace = "")
    @RequestWrapper(localName = "getMeasureDatas", targetNamespace = "http://wsimport.ws.linyang.com/", className = "com.linyang.ws.wsimport.GetMeasureDatas")
    @ResponseWrapper(localName = "getMeasureDatasResponse", targetNamespace = "http://wsimport.ws.linyang.com/", className = "com.linyang.ws.wsimport.GetMeasureDatasResponse")
    public MeasureDataResultBean getMeasureDatas(
        @WebParam(name = "frameId", targetNamespace = "")
        long frameId);

    @WebMethod
    @WebResult(name = "queryCurETwo", targetNamespace = "")
    @RequestWrapper(localName = "queryCurETwo", targetNamespace = "http://wsimport.ws.linyang.com/", className = "com.linyang.ws.wsimport.QueryCurETwo")
    @ResponseWrapper(localName = "queryCurETwoResponse", targetNamespace = "http://wsimport.ws.linyang.com/", className = "com.linyang.ws.wsimport.QueryCurETwoResponse")
	public List<DataBean> queryCurETwo(@WebParam(name = "pointIds", targetNamespace = "") List<Long> pointIds,
			@WebParam(name = "startTime", targetNamespace = "") Long startTime,
			@WebParam(name = "endTime", targetNamespace = "") Long endTime);
}
